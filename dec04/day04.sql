create table dec04 (
	id integer generated by default as identity,
	tasks text
);

-- COPY the text into the appropriate columns
\COPY dec04 (tasks) FROM input_04.txt NULL '';

select count(*) from dec04;

select * from dec04
order by id;

select id, tasks, SPLIT_PART(tasks,',',1), SPLIT_PART(tasks,',',2) from dec04; 

-- star 1
with task_arrays as (
	select id, generate_series(elf1[1]::int,elf1[2]::int) t1, generate_series(elf2[1]::int,elf2[2]::int) t2 from (
		select id, STRING_TO_ARRAY(SPLIT_PART(tasks,',',1),'-') elf1, STRING_TO_ARRAY(SPLIT_PART(tasks,',',2),'-') elf2  from dec04
	) x
),
task_groups as (
	select id, array_agg(t1) FILTER (where t1 is not null) tl1, array_agg(t2) FILTER (where t2 is not null) tl2 from task_arrays
	group by id
)
select sum(overlap) from (
	select case 
		when tl1 @> tl2 then 1 
		when tl1 <@ tl2 then 1
		else 0 end overlap
	from task_groups
) a; 


-- Alternate Star 1
with task_groups as (
	select id, elf1,elf2, 
		format($$[%s]$$,elf1)::int4range tl1, 
		format($$[%s]$$,elf2)::int4range tl2 
	from (
		select id, REPLACE (SPLIT_PART(tasks,',',1),'-',',') elf1, replace(SPLIT_PART(tasks,',',2),'-',',') elf2  from dec04
	) x
)
select sum(overlap) from (
	select case 
		when tl1 @> tl2 then 1 
		when tl1 <@ tl2 then 1
		else 0 end overlap
	from task_groups
) a; 


-- star 2
with task_groups as (
	select id, elf1,elf2, 
		format($$[%s]$$,elf1)::int4range tl1, 
		format($$[%s]$$,elf2)::int4range tl2 
	from (
		select id, REPLACE (SPLIT_PART(tasks,',',1),'-',',') elf1, replace(SPLIT_PART(tasks,',',2),'-',',') elf2  from dec04
	) x
)
select count(*) from task_groups where tl1 && tl2;



